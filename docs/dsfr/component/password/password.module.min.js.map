{"version":3,"file":"password.module.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/password/script/password/password-emission.js","../../../src/component/password/script/password/password-toggle.js","../../../src/component/password/script/password/password.js","../../../src/component/password/script/password/password-selector.js","../../../src/component/password/script/password/password-input.js","../../../src/component/password/script/password/password-label.js","../../../src/component/password/index.js","../../../src/component/password/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.8.5'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\nexport const PasswordEmission = {\n  TOGGLE: api.internals.ns.emission('password', 'toggle'),\n  ADJUST: api.internals.ns.emission('password', 'adjust')\n};\n","import api from '../../api.js';\nimport { PasswordEmission } from './password-emission.js';\n\nclass PasswordToggle extends api.core.Instance {\n  static get instanceClassName () {\n    return 'PasswordToggle';\n  }\n\n  init () {\n    this.listen('click', this.toggle.bind(this));\n    this.ascend(PasswordEmission.ADJUST, this.width);\n    this.isSwappingFont = true;\n    this._isChecked = this.isChecked;\n  }\n\n  get width () {\n    const style = getComputedStyle(this.node.parentNode);\n    return parseInt(style.width);\n  }\n\n  get isChecked () {\n    return this.node.checked;\n  }\n\n  set isChecked (value) {\n    this._isChecked = value;\n    this.ascend(PasswordEmission.TOGGLE, value);\n  }\n\n  toggle () {\n    this.isChecked = !this._isChecked;\n    // this.node.checked = this.isChecked;\n  }\n\n  swapFont (families) {\n    this.ascend(PasswordEmission.ADJUST, this.width);\n  }\n}\n\nexport { PasswordToggle };\n","import api from '../../api.js';\nimport { PasswordEmission } from './password-emission.js';\n\nclass Password extends api.core.Instance {\n  static get instanceClassName () {\n    return 'Password';\n  }\n\n  init () {\n    this.addAscent(PasswordEmission.TOGGLE, this.toggle.bind(this));\n    this.addAscent(PasswordEmission.ADJUST, this.adjust.bind(this));\n  }\n\n  toggle (value) {\n    this.descend(PasswordEmission.TOGGLE, value);\n  }\n\n  adjust (value) {\n    this.descend(PasswordEmission.ADJUST, value);\n  }\n}\n\nexport { Password };\n","import api from '../../api.js';\n\nexport const PasswordSelector = {\n  PASSWORD: api.internals.ns.selector('password'),\n  INPUT: api.internals.ns.selector('password__input'),\n  LABEL: api.internals.ns.selector('password__label'),\n  TOOGLE: `${api.internals.ns.selector('password__checkbox')} input[type=\"checkbox\"]`\n};\n","import api from '../../api.js';\nimport { PasswordEmission } from './password-emission.js';\n\nclass PasswordInput extends api.core.Instance {\n  static get instanceClassName () {\n    return 'PasswordInput';\n  }\n\n  init () {\n    this.addDescent(PasswordEmission.TOGGLE, this.toggle.bind(this));\n    this._isRevealed = this.hasAttribute('type') === 'password';\n    this.listen('keydown', this.capslock.bind(this)); // for capslock enabled\n    this.listen('keyup', this.capslock.bind(this)); // for capslock desabled\n  }\n\n  toggle (value) {\n    this.isRevealed = value;\n    this.setAttribute('type', value ? 'text' : 'password');\n  }\n\n  get isRevealed () {\n    return this._isRevealed;\n  }\n\n  capslock (event) {\n    if (event.getModifierState('CapsLock')) {\n      this.node.parentNode.setAttribute(api.internals.ns.attr('capslock'), '');\n    } else {\n      this.node.parentNode.removeAttribute(api.internals.ns.attr('capslock'));\n    }\n  }\n\n  set isRevealed (value) {\n    this._isRevealed = value;\n    this.setAttribute('type', value ? 'text' : 'password');\n  }\n}\n\nexport { PasswordInput };\n","import api from '../../api.js';\nimport { PasswordEmission } from './password-emission.js';\n\nclass PasswordLabel extends api.core.Instance {\n  static get instanceClassName () {\n    return 'PasswordLabel';\n  }\n\n  init () {\n    this.addDescent(PasswordEmission.ADJUST, this.adjust.bind(this));\n  }\n\n  adjust (value) {\n    const valueREM = Math.ceil(value / 16);\n    this.node.style.paddingRight = valueREM + 'rem';\n  }\n}\n\nexport { PasswordLabel };\n","import api from './api.js';\nimport { PasswordToggle } from './script/password/password-toggle.js';\nimport { Password } from './script/password/password.js';\nimport { PasswordSelector } from './script/password/password-selector.js';\nimport { PasswordInput } from './script/password/password-input.js';\nimport { PasswordLabel } from './script/password/password-label.js';\n\napi.password = {\n  Password: Password,\n  PasswordToggle: PasswordToggle,\n  PasswordSelector: PasswordSelector,\n  PasswordInput: PasswordInput,\n  PasswordLabel: PasswordLabel\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.password.PasswordSelector.INPUT, api.password.PasswordInput);\napi.internals.register(api.password.PasswordSelector.PASSWORD, api.password.Password);\napi.internals.register(api.password.PasswordSelector.TOOGLE, api.password.PasswordToggle);\napi.internals.register(api.password.PasswordSelector.LABEL, api.password.PasswordLabel);\n\nexport default api;\n"],"names":["api","window","PasswordEmission","TOGGLE","internals","ns","emission","ADJUST","PasswordToggle","core","Instance","instanceClassName","init","this","listen","toggle","bind","ascend","width","isSwappingFont","_isChecked","isChecked","style","getComputedStyle","node","parentNode","parseInt","checked","value","swapFont","families","Password","addAscent","adjust","descend","PasswordSelector","PASSWORD","selector","INPUT","LABEL","TOOGLE","PasswordInput","addDescent","_isRevealed","hasAttribute","capslock","isRevealed","setAttribute","event","getModifierState","attr","removeAttribute","PasswordLabel","valueREM","Math","ceil","paddingRight","password","register"],"mappings":"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"}
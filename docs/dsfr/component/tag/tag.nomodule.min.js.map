{"version":3,"file":"tag.nomodule.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/tag/script/tag/tag-event.js","../../../src/component/tag/script/tag/tag-dismissible.js","../../../src/component/tag/script/tag/tag-selector.js","../../../src/component/tag/index.js","../../../src/component/tag/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.8.5'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\nconst TagEvent = {\n  DISMISS: api.internals.ns.event('dismiss')\n};\n\nexport { TagEvent };\n","import api from '../../api.js';\nimport { TagEvent } from './tag-event';\n\nclass TagDismissible extends api.core.Instance {\n  static get instanceClassName () {\n    return 'TagDismissible';\n  }\n\n  init () {\n    this.listen('click', this.click.bind(this));\n  }\n\n  click () {\n    this.focusClosest();\n\n    switch (api.mode) {\n      case api.Modes.ANGULAR:\n      case api.Modes.REACT:\n      case api.Modes.VUE:\n        this.request(this.verify.bind(this));\n        break;\n\n      default:\n        this.remove();\n    }\n\n    this.dispatch(TagEvent.DISMISS);\n  }\n\n  verify () {\n    if (document.body.contains(this.node)) api.inspector.warn(`a TagDismissible has just been dismissed and should be removed from the dom. In ${api.mode} mode, the api doesn't handle dom modification. An event ${TagEvent.DISMISS} is dispatched by the element to trigger the removal`);\n  }\n}\n\nexport { TagDismissible };\n","import api from '../../api.js';\n\nexport const TagSelector = {\n  PRESSABLE: `${api.internals.ns.selector('tag')}[aria-pressed]`,\n  DISMISSIBLE: `${api.internals.ns.selector('tag--dismiss')}`\n};\n","import api from './api.js';\nimport { TagDismissible } from './script/tag/tag-dismissible';\nimport { TagSelector } from './script/tag/tag-selector';\nimport { TagEvent } from './script/tag/tag-event';\n\napi.tag = {\n  TagDismissible: TagDismissible,\n  TagSelector: TagSelector,\n  TagEvent: TagEvent\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.tag.TagSelector.PRESSABLE, api.core.Toggle);\napi.internals.register(api.tag.TagSelector.DISMISSIBLE, api.tag.TagDismissible);\n\nexport default api;\n"],"names":["const","api","window","TagEvent","DISMISS","internals","ns","event","TagDismissible","staticAccessors","instanceClassName","init","this","listen","click","bind","focusClosest","mode","Modes","ANGULAR","REACT","VUE","request","verify","remove","dispatch","document","body","contains","node","inspector","warn","core","Instance","TagSelector","PRESSABLE","selector","DISMISSIBLE","tag","register","Toggle"],"mappings":";yBAAAA,ICCMC,EAAMC,OAAuB,KCC7BC,EAAW,CACfC,QAASH,EAAII,UAAUC,GAAGC,MAAM,YCA5BC,6LACJC,EAAWC,iCACT,MAAO,8BAGTC,gBACEC,KAAKC,OAAO,QAASD,KAAKE,MAAMC,KAAKH,oBAGvCE,iBAGE,OAFAF,KAAKI,eAEGf,EAAIgB,MACV,KAAKhB,EAAIiB,MAAMC,QACf,KAAKlB,EAAIiB,MAAME,MACf,KAAKnB,EAAIiB,MAAMG,IACbT,KAAKU,QAAQV,KAAKW,OAAOR,KAAKH,OAC9B,MAEF,QACEA,KAAKY,SAGTZ,KAAKa,SAAStB,EAASC,sBAGzBmB,kBACMG,SAASC,KAAKC,SAAShB,KAAKiB,OAAO5B,EAAI6B,UAAUC,wFAAwF9B,mEAAoEE,mGA3BxLF,EAAI+B,KAAKC,UCDzBC,EAAc,CACzBC,UAAclC,EAAII,UAAUC,GAAG8B,SAAS,wBACxCC,eAAgBpC,EAAII,UAAUC,GAAG8B,SAAS,iBCC5CnC,EAAIqC,IAAM,CACR9B,eAAgBA,EAChB0B,YAAaA,EACb/B,SAAUA,GCNZF,EAAII,UAAUkC,SAAStC,EAAIqC,IAAIJ,YAAYC,UAAWlC,EAAI+B,KAAKQ,QAC/DvC,EAAII,UAAUkC,SAAStC,EAAIqC,IAAIJ,YAAYG,YAAapC,EAAIqC,IAAI9B"}
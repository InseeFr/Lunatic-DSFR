{"version":3,"file":"tag.module.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/tag/script/tag/tag-event.js","../../../src/component/tag/script/tag/tag-dismissible.js","../../../src/component/tag/script/tag/tag-selector.js","../../../src/component/tag/index.js","../../../src/component/tag/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.8.5'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\nconst TagEvent = {\n  DISMISS: api.internals.ns.event('dismiss')\n};\n\nexport { TagEvent };\n","import api from '../../api.js';\nimport { TagEvent } from './tag-event';\n\nclass TagDismissible extends api.core.Instance {\n  static get instanceClassName () {\n    return 'TagDismissible';\n  }\n\n  init () {\n    this.listen('click', this.click.bind(this));\n  }\n\n  click () {\n    this.focusClosest();\n\n    switch (api.mode) {\n      case api.Modes.ANGULAR:\n      case api.Modes.REACT:\n      case api.Modes.VUE:\n        this.request(this.verify.bind(this));\n        break;\n\n      default:\n        this.remove();\n    }\n\n    this.dispatch(TagEvent.DISMISS);\n  }\n\n  verify () {\n    if (document.body.contains(this.node)) api.inspector.warn(`a TagDismissible has just been dismissed and should be removed from the dom. In ${api.mode} mode, the api doesn't handle dom modification. An event ${TagEvent.DISMISS} is dispatched by the element to trigger the removal`);\n  }\n}\n\nexport { TagDismissible };\n","import api from '../../api.js';\n\nexport const TagSelector = {\n  PRESSABLE: `${api.internals.ns.selector('tag')}[aria-pressed]`,\n  DISMISSIBLE: `${api.internals.ns.selector('tag--dismiss')}`\n};\n","import api from './api.js';\nimport { TagDismissible } from './script/tag/tag-dismissible';\nimport { TagSelector } from './script/tag/tag-selector';\nimport { TagEvent } from './script/tag/tag-event';\n\napi.tag = {\n  TagDismissible: TagDismissible,\n  TagSelector: TagSelector,\n  TagEvent: TagEvent\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.tag.TagSelector.PRESSABLE, api.core.Toggle);\napi.internals.register(api.tag.TagSelector.DISMISSIBLE, api.tag.TagDismissible);\n\nexport default api;\n"],"names":["api","window","TagEvent","DISMISS","internals","ns","event","TagDismissible","core","Instance","instanceClassName","init","this","listen","click","bind","focusClosest","mode","Modes","ANGULAR","REACT","VUE","request","verify","remove","dispatch","document","body","contains","node","inspector","warn","TagSelector","PRESSABLE","selector","DISMISSIBLE","tag","register","Toggle"],"mappings":";AAAA,MCCMA,EAAMC,OAAuB,KCC7BC,EAAW,CACfC,QAASH,EAAII,UAAUC,GAAGC,MAAM,YCAlC,MAAMC,UAAuBP,EAAIQ,KAAKC,SACzBC,+BACT,MAAO,iBAGTC,OACEC,KAAKC,OAAO,QAASD,KAAKE,MAAMC,KAAKH,OAGvCE,QAGE,OAFAF,KAAKI,eAEGhB,EAAIiB,MACV,KAAKjB,EAAIkB,MAAMC,QACf,KAAKnB,EAAIkB,MAAME,MACf,KAAKpB,EAAIkB,MAAMG,IACbT,KAAKU,QAAQV,KAAKW,OAAOR,KAAKH,OAC9B,MAEF,QACEA,KAAKY,SAGTZ,KAAKa,SAASvB,EAASC,SAGzBoB,SACMG,SAASC,KAAKC,SAAShB,KAAKiB,OAAO7B,EAAI8B,UAAUC,KAAK,mFAAmF/B,EAAIiB,gEAAgEf,EAASC,gEC5BvN,MAAM6B,EAAc,CACzBC,UAAW,GAAGjC,EAAII,UAAUC,GAAG6B,SAAS,uBACxCC,YAAa,GAAGnC,EAAII,UAAUC,GAAG6B,SAAS,mBCC5ClC,EAAIoC,IAAM,CACR7B,eAAgBA,EAChByB,YAAaA,EACb9B,SAAUA,GCNZF,EAAII,UAAUiC,SAASrC,EAAIoC,IAAIJ,YAAYC,UAAWjC,EAAIQ,KAAK8B,QAC/DtC,EAAII,UAAUiC,SAASrC,EAAIoC,IAAIJ,YAAYG,YAAanC,EAAIoC,IAAI7B"}
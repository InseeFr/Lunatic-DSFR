import{M as a}from"./chunk-HLWAVYOI-Bg_qVU5L.js";import{u as c}from"./index-oxlXBEME.js";import{j as t,a as n,F as l}from"./jsx-runtime-CVWdv3H2.js";import{useMDXComponents as s}from"./index-DI5IigMn.js";import"./iframe-wFJFQVuU.js";import"../sb-preview/runtime.js";import"./index-CBqU2yxZ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./react-18-D8cruF67.js";import"./index-BtM5VmRH.js";import"./inheritsLoose-Cay3MKMD.js";import"./index-BlN7QbS8.js";import"./index-CWLWFqC4.js";import"./index-DrFu-skq.js";import"./isPlainObject-CqQ1Hhx9.js";function i(r){const e=Object.assign({p:"p",a:"a",blockquote:"blockquote",br:"br"},s(),r.components);return n(l,{children:[t(a,{title:"Introduction"}),`
`,n("div",{style:{margin:"0 auto",textAlign:"center"},children:[t("div",{style:{display:"flex",justifyContent:"center"},children:t("img",{src:c()?"https://raw.githubusercontent.com/InseeFr/Lunatic-DSFR/main/overview-dark.png":"https://raw.githubusercontent.com/InseeFr/Lunatic-DSFR/main/overview-light.png"})}),n(e.p,{children:["Lunatic-DSFR is a library of customised ",t(e.a,{href:"https://github.com/InseeFr/Lunatic",target:"_blank",rel:"nofollow noopener noreferrer",children:"Lunatic"})," components built with TypeScript and ",t(e.a,{href:"https://react-dsfr.etalab.studio/",target:"_blank",rel:"nofollow noopener noreferrer",children:"React-DSFR"}),"."]}),n(e.p,{children:["This library is designed to be an opt-in solution to replace the native style of Lunatic with the style of the ",t(e.a,{href:"https://systeme-de-design.gouv.fr/",target:"_blank",rel:"nofollow noopener noreferrer",children:"French Design system"}),"."]}),n(e.blockquote,{children:[`
`,n(e.p,{children:["WARNING: This Design System is only meant to be used for official French's public service websites.",t(e.br,{}),`
`,"Its main purpose is to make it easy to identify governmental websites for citizens. ",t(e.a,{href:"https://www.systeme-de-design.gouv.fr/cgu/",target:"_blank",rel:"nofollow noopener noreferrer",children:"See terms"}),"."]}),`
`]})]})]})}function p(r={}){const{wrapper:e}=Object.assign({},s(),r.components);return e?t(e,{...r,children:t(i,{...r})}):i(r)}const m=()=>{throw new Error("Docs-only story")};m.parameters={docsOnly:!0};const o={title:"Introduction",tags:["stories-mdx"],includeStories:["__page"]};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:p};const S=["__page"];export{S as __namedExportsOrder,m as __page,o as default};

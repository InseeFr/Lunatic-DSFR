import{c as l}from"./chunk-ZGA76URP-CA258KPk.js";import{_ as P}from"./iframe-DpUMcYa0.js";import{r as k,a as f,d as w,s as y}from"./client-CITu49fz.js";import{s as b}from"./link-CfIrXuWu.js";import{s as v}from"./i18n-DsReUj07.js";import"../sb-preview/runtime.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CBqU2yxZ.js";const p="logo.png",m="@inseefr/lunatic-dsfr",u="https://github.com/inseefr/Lunatic-dsfr",g='"Marianne", arial, sans-serif',h="monospace",C=l({base:"dark",appBg:"#1E1E1E",appContentBg:"#161616",barBg:"#161616",colorSecondary:"#8585F6",textColor:"#FFFFFF",brandImage:p,brandTitle:m,brandUrl:u,fontBase:g,fontCode:h}),E=l({base:"light",appBg:"#F6F6F6",appContentBg:"#FFFFFF",barBg:"#FFFFFF",colorSecondary:"#000091",textColor:"#212121",brandImage:p,brandTitle:m,brandUrl:u,fontBase:g,fontCode:h});var d=k();class x{constructor(){this.isPending=!0;let t,o;this.pr=new Promise((e,s)=>{t=r=>{d.overwriteReadonlyProp(this,"isPending",!1),e(r)},o=r=>{d.overwriteReadonlyProp(this,"isPending",!1),s(r)}}),this.resolve=t,this.reject=o}}let c=!1;async function L(a){const{defaultColorScheme:t,verbose:o,nextParams:e,doCheckNonce:s,trustedTypesPolicyName:r}=a;if(f.assert(w),c)return;c=!0;const n=e===void 0?i=>i():e.registerEffectAction;y({colorSchemeExplicitlyProvidedAsParameter:t,doPersistDarkModePreferenceWithCookie:e===void 0?!1:e.doPersistDarkModePreferenceWithCookie,registerEffectAction:n,doCheckNonce:s,trustedTypesPolicyName:r}),window.dsfr={verbose:o,mode:"react"},await P(()=>import("./dsfr.module.min-BzfVCFNT.js"),__vite__mapDeps([]),import.meta.url),F.resolve(),n(()=>{window.dsfr.start()})}const F=new x;F.pr;function B(a){const{defaultColorScheme:t,verbose:o=!1,Link:e,useLang:s,nonce:r,trustedTypesPolicyName:n="react-dsfr"}=a;e!==void 0&&b({Link:e}),s!==void 0&&v({useLang:s}),f.assert(r!=="","nonce cannot be an empty string");const i=r!==void 0;i&&(window.ssrNonce=r),L({defaultColorScheme:t,verbose:o,doCheckNonce:i,trustedTypesPolicyName:n,nextParams:void 0})}B({defaultColorScheme:"system",useLang:()=>"fr"});const I={parameters:{actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}},backgrounds:{disable:!0},darkMode:{current:"dark",light:E,dark:C},docs:{autodocs:!0}}};export{I as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}

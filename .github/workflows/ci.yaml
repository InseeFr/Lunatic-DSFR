name: ci
on:
    push:
        branches:
            - main
            - v1
    pull_request:
        branches:
            - v1

jobs:
    test_lint:
        runs-on: ubuntu-latest
        if: ${{ !github.event.created && github.repository != 'garronej/ts-ci' }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
            - uses: bahmutov/npm-install@v1
              env:
                  XDG_CACHE_HOME: "/home/runner/.cache/yarn"
            - name: If this step fails run 'yarn format' then commit again.
              run: yarn format:check

    test:
        runs-on: ${{ matrix.os }}
        needs: test_lint
        strategy:
            matrix:
                node: ["20"]
                os: [ubuntu-latest]
        name: Test with Node v${{ matrix.node }} on ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
            - uses: bahmutov/npm-install@v1
              env:
                  XDG_CACHE_HOME: "/home/runner/.cache/yarn"
            - run: yarn build

    storybook:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        needs: test
        steps:
            - name: Destination dir
              id: destination-dir
              run: |
                  if [ "${{ github.ref }}" = "refs/heads/v1" ]; then
                    echo "destination_dir=storybook-v1" >> $GITHUB_OUTPUT
                  else
                    echo "destination_dir=." >> $GITHUB_OUTPUT
                  fi
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
            - uses: bahmutov/npm-install@v1
              env:
                  XDG_CACHE_HOME: "/home/runner/.cache/yarn"
            - run: yarn build-storybook
            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./storybook-static
                  destination_dir: ${{ steps.destination-dir.outputs.destination_dir }}

    check_if_version_upgraded:
        name: Check if version upgrade
        if: |
            github.event_name == 'push' || 
            github.event.pull_request.head.repo.owner.login == github.event.pull_request.base.repo.owner.login
        runs-on: ubuntu-latest
        needs: test
        outputs:
            from_version: ${{ steps.step1.outputs.from_version }}
            to_version: ${{ steps.step1.outputs.to_version }}
            is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
            is_pre_release: ${{steps.step1.outputs.is_pre_release }}
        steps:
            - uses: garronej/ts-ci@v2.1.0
              id: step1
              with:
                  action_name: is_package_json_version_upgraded
                  branch: ${{ github.head_ref || github.ref }}

    create_github_release:
        runs-on: ubuntu-latest
        if: |
            needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
            (
              github.event_name == 'push' ||
              needs.check_if_version_upgraded.outputs.is_pre_release == 'true'
            )
        needs:
            - check_if_version_upgraded
        steps:
            - uses: softprops/action-gh-release@v1
              with:
                  name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
                  tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
                  target_commitish: ${{ github.head_ref || github.ref }}
                  generate_release_notes: true
                  draft: false
                  prerelease: ${{ needs.check_if_version_upgraded.outputs.is_pre_release == 'true' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish_on_npm:
        runs-on: ubuntu-latest
        needs:
            - create_github_release
            - check_if_version_upgraded
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}
            - uses: actions/setup-node@v4
              with:
                  registry-url: https://registry.npmjs.org/
            - uses: bahmutov/npm-install@v1
              env:
                  XDG_CACHE_HOME: "/home/runner/.cache/yarn"
            - run: yarn build
            - run: npx -y -p denoify@1.3.0 enable_short_npm_import_path
              env:
                  DRY_RUN: "0"
            - uses: garronej/ts-ci@v2.1.0
              with:
                  action_name: remove_dark_mode_specific_images_from_readme
            - name: Publishing on NPM
              run: |
                  if [ "$(npm show . version)" = "$VERSION" ]; then
                    echo "This version is already published"
                    exit 0
                  fi
                  if [ "$NODE_AUTH_TOKEN" = "" ]; then
                    echo "Can't publish on NPM, You must first create a secret called NPM_TOKEN that contains your NPM auth token. https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets"
                    false
                  fi
                  EXTRA_ARGS=""
                  if [ "$IS_PRE_RELEASE" = "true" ]; then
                    EXTRA_ARGS="--tag next"
                  fi
                  npm publish --access public $EXTRA_ARGS
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
                  VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
                  IS_PRE_RELEASE: ${{ needs.check_if_version_upgraded.outputs.is_pre_release }}